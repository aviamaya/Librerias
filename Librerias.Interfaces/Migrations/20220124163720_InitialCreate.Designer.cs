// <auto-generated />
using System;
using Librerias.Interfaces.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Librerias.Interfaces.Migrations
{
    [DbContext(typeof(LibreriaDbContext))]
    [Migration("20220124163720_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Librerias.Entities.Autor", b =>
                {
                    b.Property<int>("IdAutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Celular")
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LibrosRelacionIdRelacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoDocumento")
                        .HasColumnType("int");

                    b.HasKey("IdAutor");

                    b.HasIndex("LibrosRelacionIdRelacion");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("Librerias.Entities.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LibrosRelacionIdRelacion")
                        .HasColumnType("int");

                    b.HasKey("IdCategoria");

                    b.HasIndex("LibrosRelacionIdRelacion");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("Librerias.Entities.Libro", b =>
                {
                    b.Property<int>("IdLibro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LibrosRelacionIdRelacion")
                        .HasColumnType("int");

                    b.Property<string>("NombreLibro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLibro");

                    b.HasIndex("LibrosRelacionIdRelacion");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("Librerias.Entities.LibrosRelacion", b =>
                {
                    b.Property<int>("IdRelacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAutor")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdLibro")
                        .HasColumnType("int");

                    b.HasKey("IdRelacion");

                    b.ToTable("LibrosRelaciones");
                });

            modelBuilder.Entity("Librerias.Entities.Autor", b =>
                {
                    b.HasOne("Librerias.Entities.LibrosRelacion", "LibrosRelacion")
                        .WithMany("Autores")
                        .HasForeignKey("LibrosRelacionIdRelacion");

                    b.Navigation("LibrosRelacion");
                });

            modelBuilder.Entity("Librerias.Entities.Categoria", b =>
                {
                    b.HasOne("Librerias.Entities.LibrosRelacion", "LibrosRelacion")
                        .WithMany("Categorias")
                        .HasForeignKey("LibrosRelacionIdRelacion");

                    b.Navigation("LibrosRelacion");
                });

            modelBuilder.Entity("Librerias.Entities.Libro", b =>
                {
                    b.HasOne("Librerias.Entities.LibrosRelacion", "LibrosRelacion")
                        .WithMany("Libros")
                        .HasForeignKey("LibrosRelacionIdRelacion");

                    b.Navigation("LibrosRelacion");
                });

            modelBuilder.Entity("Librerias.Entities.LibrosRelacion", b =>
                {
                    b.Navigation("Autores");

                    b.Navigation("Categorias");

                    b.Navigation("Libros");
                });
#pragma warning restore 612, 618
        }
    }
}
